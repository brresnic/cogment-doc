"use strict";(self.webpackChunkcogment_doc=self.webpackChunkcogment_doc||[]).push([[63],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,u=m["".concat(s,".").concat(h)]||m[h]||d[h]||i;return n?r.createElement(u,o(o({ref:t},p),{},{components:n})):r.createElement(u,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7189:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s="Trial Parameters",c={unversionedId:"cogment/cogment-api-reference/parameters",id:"cogment/cogment-api-reference/parameters",title:"Trial Parameters",description:"The trial parameters are a set of parameters that define the details of a trial.",source:"@site/docs/cogment/cogment-api-reference/parameters.md",sourceDirName:"cogment/cogment-api-reference",slug:"/cogment/cogment-api-reference/parameters",permalink:"/docs/cogment/cogment-api-reference/parameters",tags:[],version:"current",lastUpdatedAt:1646409859,formattedLastUpdatedAt:"3/4/2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"Javascript SDK",permalink:"/docs/cogment/cogment-api-reference/javascript"},next:{title:"Python SDK",permalink:"/docs/cogment/cogment-api-reference/python"}},p=[{value:"Parameter file",id:"parameter-file",children:[],level:2},{value:"Parameters and pre-trial hooks",id:"parameters-and-pre-trial-hooks",children:[],level:2},{value:"Cogment endpoints",id:"cogment-endpoints",children:[{value:"<code>grpc</code> scheme",id:"grpc-scheme",children:[],level:3},{value:"<code>cogment</code> scheme",id:"cogment-scheme",children:[{value:"<code>client</code> host",id:"client-host",children:[],level:4},{value:"<code>discover</code> host",id:"discover-host",children:[{value:"Discovery path",id:"discovery-path",children:[],level:5},{value:"Discovery query",id:"discovery-query",children:[],level:5},{value:"Reserved query properties",id:"reserved-query-properties",children:[],level:5}],level:4}],level:3}],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"trial-parameters"},"Trial Parameters"),(0,i.kt)("p",null,"The trial parameters are a set of parameters that define the details of a trial.\nThey may be generated from the default parameters provided to the Orchestrator, and updated by the pre-trial hooks.\nOr they can be provided whole to the trial start call, in which case the default parameters are ignored and the pre-trial hooks are not used."),(0,i.kt)("p",null,"In the parameters, are optional config messages for the trial, environment and actors.\nThe trial config is only used by the pre-trial hooks, whereas the other configs are sent to their respective destination at the start of the trial.\nThe config protobuf messages are defined in the spec file."),(0,i.kt)("p",null,"The pre-trial hooks exist to allow dynamic parameter setting at the start of a trial, with the use of the trial config.\nAnother way to set the parameters dynamically is by providing them to the start trial call.\nThe parameters of the trial start call take priority over all others, and thus when provided, the default parameters will be ignored and the pre-trial hooks will not be called."),(0,i.kt)("h2",{id:"parameter-file"},"Parameter file"),(0,i.kt)("p",null,"The parameter file serves to initialize the Orchestrator default parameters.\nIt is able to set all parameters except for the configs."),(0,i.kt)("p",null,"The file uses the YAML configuration language. It consists of one top level YAML section called ",(0,i.kt)("a",{parentName:"p",href:"#trial-params"},"trial_params"),".\nAny other top level section will be ignored."),(0,i.kt)("p",null,"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max_steps"),": The maximum number of time steps (ticks) that the trial will run before terminating. If 0, the trial will not be auto terminated (the environment and a Controller can still terminate the trial). If not provided, a default of 0 will be used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max_inactivity"),": The number of seconds of inactivity after which a trial will be terminated. If 0, the trial will not be terminated because of inactivity. If not provided, a default of 30 seconds will be used."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"datalog"),": List of properties related to the data logger. If this section is not present, data logging is disabled.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"endpoint"),": Endpoint of the datalogger"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"exclude_fields"),": List of fields to exclude from the data to send for logging"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"environment"),": List of properties for the environment",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),': The name of the environment (defaults to "env" if not provided)'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"endpoint"),": Endpoint of the environment"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"implementation"),": The name of the implementation to be used for this instance of the environment. This must match an implementation that is defined at the endpoint. If not defined, an arbitraary implementation will be chosen at runtime"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actors"),": List of actor properties. The number of actors may not be suited for all trials.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),": The name of this actor (i.e. name of the specific instance of the actor class)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actor_class"),": The name of the actor class. This is specific to a type of trial and must match values in the corresponding spec file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"endpoint"),": Endpoint of the actor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"implementation"),": The name of the implementation to be used for this actor instance. This must match an implementation that is defined at the endpoint. If not defined, an arbitraary implementation will be chosen at runtime.")))),(0,i.kt)("p",null,"E.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"trial_params:\n    max_steps: 1000\n    max_inactivity: 5 # seconds\n\n    datalog:\n        endpoint: grpc://logserver:9000\n        exclude_fields: [messages, actions]\n\n    environment:\n        name: Arena\n        endpoint: grpc://env:9000\n        implementation: simple\n\n    actors:\n        - name: Alice\n          actor_class: BigPlayer\n          endpoint: cogment://discover\n          implementation:\n        - name: Bob\n          actor_class: BigPlayer\n          endpoint: grpc://bp2:9000\n          implementation: Test\n        - name: Carol\n          actor_class: SmallPlayer\n          endpoint: grpc://sp:9000\n          implementation: DQN_Hotel3\n        - name: Dave\n          actor_class: SmallPlayer\n          endpoint: cogment://discover/service?id=8390256\n          implementation: DNN_Karma3.1.17\n        - name: Olivia\n          actor_class: Referee\n          endpoint: cogment://client\n          implementation: Standard\n")),(0,i.kt)("h2",{id:"parameters-and-pre-trial-hooks"},"Parameters and pre-trial hooks"),(0,i.kt)("p",null,"If no parameters were given to the trial start call, the default parameters and pre-trial hooks are used.\nAnd if no pre-trial hooks are defined, the default parameters will be used directly to start the trial."),(0,i.kt)("p",null,"Pre-trial hooks are gRPC services that may be called to set up the parameters for a new trial. Multiple hooks can be defined and they will all be called in order, in a pipeline fashion (i.e. the output of one becomes the input of the next). The first hook service to be called will receive the default parameters (augmented by the trial config that may be given to the trial start call). The output of the last hook is used as final parameters to start the new trial. The response of the last hook will be waited on before the trial starts."),(0,i.kt)("p",null,"The hooks will be called to update or generate all the parameter data (presented here) in addition to the configurations for the environment and the actors (if needed)."),(0,i.kt)("p",null,"Pre-trial hooks are defined on the command line (or an environment variable) when starting the Orchestrator."),(0,i.kt)("h2",{id:"cogment-endpoints"},"Cogment endpoints"),(0,i.kt)("p",null,"Cogment endpoints are basic URLs (",(0,i.kt)("inlineCode",{parentName:"p"},"scheme://host/path?query"),") that can have one of two schemes: ",(0,i.kt)("inlineCode",{parentName:"p"},"grpc")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"cogment"),".\nThe path and query are optional, but a valid endpoint must have a scheme and a host."),(0,i.kt)("p",null,"The context is used to determine what API service will be used to connect to the endpoint; e.g. if this is the endpoint for an environment, then the ",(0,i.kt)("inlineCode",{parentName:"p"},"EnvironmentSP")," gRPC API will be used."),(0,i.kt)("h3",{id:"grpc-scheme"},(0,i.kt)("inlineCode",{parentName:"h3"},"grpc")," scheme"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"grpc")," scheme is used to access a network resource using one of the Cogment gRPC API.\nThis is also called a gRPC endpoint.\nThe rest of the URL is a standard HTTP address (with port) and points to the gRPC server waiting for connection. E.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"grpc://10.0.123.5:9000\ngrpc://SomeServer:9011\ngrpc://second.actors.base.com:9050\n")),(0,i.kt)("h3",{id:"cogment-scheme"},(0,i.kt)("inlineCode",{parentName:"h3"},"cogment")," scheme"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"cogment")," scheme is specific to Cogment and has two possible hosts: ",(0,i.kt)("inlineCode",{parentName:"p"},"client")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"discover"),"."),(0,i.kt)("h4",{id:"client-host"},(0,i.kt)("inlineCode",{parentName:"h4"},"client")," host"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"client")," host is used in the very specific case of an ",(0,i.kt)("em",{parentName:"p"},"actor"),' being "client actor".\nOnly actors can use this URL.\nIn this case, the actor with such an endpoint (i.e. ',(0,i.kt)("inlineCode",{parentName:"p"},"cogment://client"),") will connect as a client, the Orchestrator being the server.\nThe client will connect to the actor port of the ","[Orchestrator][../cogment-components/orchestrator/orchestrator.md]","."),(0,i.kt)("h4",{id:"discover-host"},(0,i.kt)("inlineCode",{parentName:"h4"},"discover")," host"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"discover")," host is to indicate that a directory needs to be inquired.\nThis is also called a discovery endpoint."),(0,i.kt)("p",null,"The directory returns an actual endpoint where to reach the service; either a gRPC endpoint (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"grpc://10.5.134.2:9000"),"), or for an actor, it can also be a client host URL (",(0,i.kt)("inlineCode",{parentName:"p"},"cogment://client"),").\nThe result cannot be another discovery endpoint."),(0,i.kt)("p",null,"The endpoint for the directory is provided to the Orchestrator as a command line option, and is a gRPC endpoint."),(0,i.kt)("p",null,"With a ",(0,i.kt)("strong",{parentName:"p"},"context discovery endpoint"),' there is no path in the URL, and some of the details of the service will be obtained from the context of the endpoint (i.e. where the endpoint was provided and for what).\nE.g. for an actor endpoint, the context path is "actor" and the context query adds "actor_class" and "implementation" properties.'),(0,i.kt)("p",null,"E.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cogment://discover\ncogment://discover?tag=blue\ncogment://discover?tag=red&zone=1\n")),(0,i.kt)("p",null,"for an actor, these would be equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cogment://discover/actor?actor_class=xxx&implementation=xxx\ncogment://discover/actor?actor_class=xxx&implementation=xxx&?tag=blue\ncogment://discover/actor?actor_class=xxx&implementation=xxx&?tag=red&zone=1\n")),(0,i.kt)("p",null,"For each type of endpoint, the context provides the path and these properties (if available):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"actor: ",(0,i.kt)("inlineCode",{parentName:"li"},"actor_class"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"implementation")),(0,i.kt)("li",{parentName:"ul"},"environment: ",(0,i.kt)("inlineCode",{parentName:"li"},"implementation")),(0,i.kt)("li",{parentName:"ul"},"datalog: ",(0,i.kt)("strong",{parentName:"li"},"nothing")),(0,i.kt)("li",{parentName:"ul"},"pre-trial hook: ",(0,i.kt)("strong",{parentName:"li"},"nothing"))),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"full discovery endpoint")," (i.e. with a path) will provide all the necessary information to the directory and ",(0,i.kt)("strong",{parentName:"p"},"the context of the endpoint will be ignored"),". In other words, no property will be implicitly added to the query sent to the directory, the user is fully responsible to match the URL (and query) to the need."),(0,i.kt)("h5",{id:"discovery-path"},"Discovery path"),(0,i.kt)("p",null,"There are two categories of path for discovery endpoints, one for generic service types and the other for specific service types."),(0,i.kt)("p",null,"The generic path ",(0,i.kt)("inlineCode",{parentName:"p"},"service")," is used to find services of any type.\nIn this case, the query is ",(0,i.kt)("inlineCode",{parentName:"p"},"id=XXX")," where XXX is a 64 bit unsigned integer representing the unique ID of a service registered in the directory, e.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cogment://discover/service?id=67834892\ncogment://discover/service?id=42\n")),(0,i.kt)("p",null,"The specific paths are used to find a specific type of service:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actor"),": To find an actor service"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"environment"),": To find an environment service"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"datalog"),": To find a data logger service"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prehook"),": To find a pre-trial hook service"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lifecycle"),": To find a service offering trial life scycle management"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actservice"),": To find a service offering client actor connection")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"prehook"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lifecycle")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"actservice")," paths are not for use in the parameters.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"prehook")," path is for use by the Orchestrator on the command line.\n",(0,i.kt)("inlineCode",{parentName:"p"},"lifecyle")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"actservice")," are for use by services themselves, usually to find an Orchestrator to connect to."),(0,i.kt)("h5",{id:"discovery-query"},"Discovery query"),(0,i.kt)("p",null,"Following the path in the discovery endpoint, is the optional query; properties to find a suitable service.\nAll the properties provided in the query must match.\nWhich properties are acceptable depends on the directory (and how the services are registered in the directory)."),(0,i.kt)("p",null,"The query in the discovery endpoint must follow these guidelines:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Entries are separated by the ampersand (&)"),(0,i.kt)("li",{parentName:"ul"},"Property name and associated value are separated by an equal sign (=)"),(0,i.kt)("li",{parentName:"ul"},"Property names and values must be composed of only these characters: A-Z, a-z, 0-9, underscore (_), dash (-)"),(0,i.kt)("li",{parentName:"ul"},"Property names starting with a double underscore (",(0,i.kt)("strong",{parentName:"li"},") are reserved. E.g `"),"authentication-token`")),(0,i.kt)("p",null,"E.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cogment://discover/actor?implementation=d3qn\ncogment://discover/environment?implementation=fqdn3&type=fast-2x&ping=low\ncogment://discover/datalog?name=high&color=green_blue\n")),(0,i.kt)("h5",{id:"reserved-query-properties"},"Reserved query properties"),(0,i.kt)("p",null,"Some property names are reserved for use by other services than the directory.\nThese names cannot be used as properties to inquire from (or register in) the directory.\nThey are used for special purposes that differ for each name."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"__authentication-token"),": This query property is used to provide authentication to the directory for an inquiry. The value (and need) depends on the directory implementation and/or how the registration of the service is made in the directory.")))}m.isMDXComponent=!0}}]);