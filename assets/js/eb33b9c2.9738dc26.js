"use strict";(self.webpackChunkcogment_doc=self.webpackChunkcogment_doc||[]).push([[851],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return u}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),f=s(t),u=o,g=f["".concat(c,".").concat(u)]||f[u]||p[u]||i;return t?r.createElement(g,a(a({ref:n},m),{},{components:t})):r.createElement(g,a({ref:n},m))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9208:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return f}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={title:"Configure Trial from Controller"},c="Fully configure a trial from a [**Controller**](/docs/concepts/core-concepts",s={unversionedId:"cogment/implementation-recipes/configure-trial-from-controller",id:"cogment/implementation-recipes/configure-trial-from-controller",title:"Configure Trial from Controller",description:"controller)",source:"@site/docs/cogment/implementation-recipes/configure-trial-from-controller.md",sourceDirName:"cogment/implementation-recipes",slug:"/cogment/implementation-recipes/configure-trial-from-controller",permalink:"/docs/cogment/implementation-recipes/configure-trial-from-controller",tags:[],version:"current",lastUpdatedAt:1645720139,formattedLastUpdatedAt:"2/24/2022",frontMatter:{title:"Configure Trial from Controller"},sidebar:"docSidebar",previous:{title:"Implementation Recipes",permalink:"/docs/cogment/implementation-recipes/"},next:{title:"Migrate from Cogment v1 to v2",permalink:"/docs/cogment/implementation-recipes/v2-migration-guide"}},m=[],p={toc:m};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"fully-configure-a-trial-from-a-controller"},"Fully configure a trial from a ",(0,i.kt)("a",{parentName:"h1",href:"/docs/concepts/core-concepts#controller"},(0,i.kt)("strong",{parentName:"a"},"Controller"))),(0,i.kt)("p",null,"When starting a trial, the controller can only provide an instance of the ",(0,i.kt)("strong",{parentName:"p"},"trial configuration")," message and from this instance the pre trial hook can fill the ",(0,i.kt)("strong",{parentName:"p"},"trial parameters"),", including a full configuring of the environment and actors involved in the trial. More details can be found ",(0,i.kt)("a",{parentName:"p",href:"/docs/cogment/cogment-api-guide#pre-trial-hook"},"here"),". In some cases, you might want to fully configure a trial from the controller. This recipe is dedicated to this use case."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Implementing this recipe enables any client having access to the orchestrator to specify URLs - the actor and environment endpoints - that will be accessed (and trusted) by the orchestrator."))),(0,i.kt)("p",null,"The general idea is to define ",(0,i.kt)("inlineCode",{parentName:"p"},"TrialConfig")," so that it includes everything that's needed to parametrize the trial. It should look something like the following."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-proto"},"message EnvironmentParams {\n  string endpoint = 1;\n  EnvConfig config = 2;\n  string implementation = 3;\n}\n\nmessage ActorParams {\n    string name = 1;\n    string actor_class = 2;\n    string endpoint = 3;\n    string implementation = 4;\n    ActorConfig config = 5;\n}\n\nmessage TrialConfig {\n    EnvironmentParams environment = 1;\n    repeated ActorParams actors = 2;\n    uint32 max_steps = 3;\n    uint32 max_inactivity = 4;\n}\n")),(0,i.kt)("p",null,"When starting a trial from the controller you'll need to define the full config."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'trial_id = await controller.start_trial(trial_config=TrialConfig(\n    environment=EnvironmentParams(\n        endpoint="grpc://my-environment:9000",\n        config=# [...],\n        implementation="my-implementation"\n    )\n))\n')),(0,i.kt)("p",null,"Finally a ",(0,i.kt)("em",{parentName:"p"},"pass-through")," pre-trial hook needs to be implemented, registered and served. Its endpoint must be specified in to the Orchestrator on startup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'async def passthrough_pre_trial_hook(pre_trial_hook_session):\n    trial_config = pre_trial_hook_session.trial_config\n    pre_trial_hook_session.environment_config = trial_config.environment.config\n    pre_trial_hook_session.environment_endpoint = trial_config.environment.endpoint\n    pre_trial_hook_session.environment_implementation = trial_config.environment.implementation\n    pre_trial_hook_session.actors = [\n        {\n            "name": actor_params.name,\n            "actor_class": actor_params.actor_class,\n            "endpoint": actor_params.endpoint,\n            "implementation": actor_params.implementation,\n            "config": actor_params.config,\n        }\n        for actor_params in trial_config.actors\n    ]\n    pre_trial_hook_session.trial_max_steps = trial_config.max_steps\n    pre_trial_hook_session.trial_max_inactivity = trial_config.max_inactivity\n\n    pre_trial_hook_session.validate()\n\ncontext.register_pre_trial_hook(pre_trial_hook)\n')))}f.isMDXComponent=!0}}]);